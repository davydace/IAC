AWSTemplateFormatVersion: '2010-09-09'

Description: 'Project 3 Deployment' 

Parameters: 
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: vpc cidr block

  VpcName:
    Type: String
    Default: cf-templates-vpc

  PublicCidrBlock:
    Type: String
    Default: 10.0.0.0/24
    Description: public cidr block

  PrivateCidrBlock:
    Type: String
    Default: 10.0.10.0/24
    Description: private cidr block

Resources: 
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidr      
      Tags: 
        - Key: Name
          Value: !Ref VpcName   
  
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:     
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !Ref PublicCidrBlock    
      MapPublicIpOnLaunch: true      
      Tags: 
        - Key: Name
          Value: public-subnet 
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC     
      Tags:
        - Key: Name
          Value: public-route-table

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:     
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !Ref PrivateCidrBlock    
      MapPublicIpOnLaunch: true      
      Tags: 
        - Key: Name
          Value: private-subnet
      VpcId: !Ref VPC

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: "Name"
            Value: "Private Route Table"

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: stack
        Value: testgateway

  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId:
        Ref: "InternetGateway"

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "ingress-sg-https"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - FromPort: 443
        ToPort: 443
        IpProtocol: "tcp"
        Description: "Allow https from anywhere"
        CidrIp: "0.0.0.0/0"


Outputs: 
  VpcId:
    Value: !Ref VPC
    Description: A reference for the VPC
